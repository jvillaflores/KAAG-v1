{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\KAAG-1\\\\components\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchUser, fetchUserPosts, fetchAllUserPosts } from \"../redux/actions/index\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createMaterialBottomTabNavigator } from \"@react-navigation/material-bottom-tabs\";\nvar Tab = createMaterialBottomTabNavigator();\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nimport CourseScreen from \"./main/Course\";\nimport DictionaryScreen from \"./main/Dictionary\";\nimport CommunityScreen from \"./main/Community\";\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n      this.props.fetchUserPosts();\n      this.props.fetchAllUserPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Course\",\n        labeled: false,\n        activeColor: \"#8E2835\",\n        inactiveColor: \"#B2B2B2\",\n        barStyle: {\n          backgroundColor: '#FFFFFF'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Course\",\n        component: CourseScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 23\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Dictionary\",\n        component: DictionaryScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"book-open-page-variant\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 23\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Community\",\n        component: CommunityScreen,\n        listeners: function listeners(_ref3) {\n          var navigation = _ref3.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Community\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n                size = _ref4.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-group\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 23\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Settings\",\n        component: CourseScreen,\n        listeners: function listeners(_ref5) {\n          var navigation = _ref5.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Settings\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref6) {\n            var color = _ref6.color,\n                size = _ref6.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"cog\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 23\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser,\n    fetchUserPosts: fetchUserPosts,\n    fetchAllUserPosts: fetchAllUserPosts\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["C:/Users/Admin/Documents/GitHub/KAAG-1/components/Main.js"],"names":["React","Component","MaterialCommunityIcons","connect","bindActionCreators","fetchUser","fetchUserPosts","fetchAllUserPosts","NavigationContainer","createMaterialBottomTabNavigator","Tab","EmptyScreen","CourseScreen","DictionaryScreen","CommunityScreen","Main","props","backgroundColor","tabBarIcon","color","size","navigation","tabPress","event","preventDefault","navigate","mapStateToProps","store","currentUser","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  fetchUser,\r\n  fetchUserPosts,\r\n  fetchAllUserPosts,\r\n} from \"../redux/actions/index\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\n\r\nimport { createMaterialBottomTabNavigator } from \"@react-navigation/material-bottom-tabs\";\r\n\r\nconst Tab = createMaterialBottomTabNavigator();\r\nconst EmptyScreen = () => {\r\n  return null;\r\n};\r\n\r\n// import { LogBox } from \"react-native\";\r\n\r\n// LogBox.ignoreLogs([\"Setting a timer\"]);\r\n\r\nimport CourseScreen from \"./main/Course\";\r\nimport DictionaryScreen from \"./main/Dictionary\";\r\nimport CommunityScreen from \"./main/Community\";\r\n// import { FirstScreenNavigator } from \"../CustomNavigation\";\r\n\r\nexport class Main extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchUser();\r\n    this.props.fetchUserPosts();\r\n    this.props.fetchAllUserPosts();\r\n  }\r\n  render() {\r\n    return (\r\n      <Tab.Navigator initialRouteName = \"Course\" labeled={false} \r\n      activeColor=\"#8E2835\"\r\n      inactiveColor=\"#B2B2B2\"\r\n      barStyle={{ backgroundColor: '#FFFFFF' }}> \r\n\r\n          <Tab.Screen \r\n              name=\"Course\" \r\n              component={CourseScreen}\r\n              options = {{\r\n                  tabBarIcon: ({ color, size }) => (\r\n                      <MaterialCommunityIcons\r\n                          name = \"home\" color = {color} size ={26}/>\r\n                  ),\r\n              }}/>\r\n          <Tab.Screen \r\n              name=\"Dictionary\" \r\n              component={DictionaryScreen} \r\n              //navigation = {this.props.navigation}\r\n              options = {{\r\n                  tabBarIcon: ({ color, size }) => (\r\n                      <MaterialCommunityIcons\r\n                          name = \"book-open-page-variant\" color = {color} size ={26}/>\r\n                  ),\r\n          }}/>\r\n          <Tab.Screen \r\n              name=\"Community\" \r\n              component={CommunityScreen} \r\n              //navigation = {this.props.navigation}\r\n              listeners={({ navigation }) => ({\r\n                  tabPress: event => {\r\n                      event.preventDefault();\r\n                      navigation.navigate(\"Community\")\r\n                  }\r\n              })}\r\n              options = {{\r\n                  tabBarIcon: ({ color, size }) => (\r\n                      <MaterialCommunityIcons\r\n                          name = \"account-group\" color = {color} size ={26}/>\r\n                  ),\r\n              }}/>\r\n          <Tab.Screen \r\n              name=\"Settings\" \r\n              component={CourseScreen} \r\n              //navigation = {this.props.navigation}\r\n              //to pass along the props inside it and make it easier the logic from the profile screen perspective\r\n              listeners={({ navigation }) => ({\r\n                  tabPress: event => {\r\n                      event.preventDefault();\r\n                      navigation.navigate(\"Settings\")\r\n                  }})}\r\n              options = {{\r\n                  tabBarIcon: ({ color, size }) => (\r\n                      <MaterialCommunityIcons\r\n                          name = \"cog\" color = {color} size ={26}/>\r\n                  ),\r\n              }}/>\r\n  </Tab.Navigator>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n  currentUser: store.userState.currentUser,\r\n});\r\n\r\nconst mapDispatchProps = (dispatch) =>\r\n  bindActionCreators(\r\n    { fetchUser, fetchUserPosts, fetchAllUserPosts },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(Main);\r\n"]},"metadata":{},"sourceType":"module"}