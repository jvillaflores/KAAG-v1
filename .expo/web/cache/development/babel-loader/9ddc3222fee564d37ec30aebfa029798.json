{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\bando\\\\OneDrive\\\\Documents\\\\GitHub\\\\KAAG-v1\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport firebase from \"firebase/app\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./redux/reducers\";\nimport thunk from \"redux-thunk\";\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBBOHNuFcDbSprMbzUMu3jQpyo5aGxBvyg\",\n  authDomain: \"kaag-1aa02.firebaseapp.com\",\n  projectId: \"kaag-1aa02\",\n  storageBucket: \"kaag-1aa02.appspot.com\",\n  messagingSenderId: \"192145880916\",\n  appId: \"1:192145880916:web:fef684f7c8cb0b6e6abac1\",\n  measurementId: \"G-E8PYDQP5LT\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nimport SplashScreen from \"./Splash\";\nimport LandingScreen from \"./components/auth/Landing\";\nimport RegisterScreen from \"./components/auth/Register\";\nimport LoginScreen from \"./components/auth/Login\";\nimport MainScreen from \"./components/Main\";\nimport Landing from \"./components/auth/Landing\";\nimport ContributionScreen from \"./components/main/Contribution\";\nimport VocabularyScreen from \"./components/main/Vocabulary\";\nimport GrammarScreen from \"./components/main/Grammar\";\nimport WordScreen from \"./components/main/Word\";\nimport SaveScreen from \"./components/main/Save\";\nvar Stack = createStackNavigator();\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }\n        }, \" Loading \"));\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Navigator, {\n          initialRouteName: \"Landing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Splash\",\n          component: SplashScreen,\n          options: {\n            headerShown: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          options: {\n            headerShown: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }\n        })));\n      }\n\n      return React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Main\",\n        component: MainScreen,\n        options: {\n          headerShown: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"MainContribution\",\n        component: ContributionScreen,\n        navigation: this.props.navigation,\n        options: {\n          title: \"Post\",\n          headerTintColor: \"#fff\",\n          headerStyle: {\n            backgroundColor: \"#8E2835\"\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Vocabulary\",\n        component: VocabularyScreen,\n        options: {\n          title: \"Vocabulary\",\n          headerTintColor: \"#fff\",\n          headerStyle: {\n            backgroundColor: \"#8E2835\"\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Grammar\",\n        component: GrammarScreen,\n        options: {\n          title: \"Grammar\",\n          headerTintColor: \"#fff\",\n          headerStyle: {\n            backgroundColor: \"#8E2835\"\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Word\",\n        component: WordScreen,\n        options: {\n          title: \"\",\n          headerTintColor: \"#fff\",\n          headerStyle: {\n            backgroundColor: \"#8E2835\"\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Save\",\n        component: SaveScreen,\n        navigation: this.props.navigation,\n        options: {\n          title: \"Post\",\n          headerTintColor: \"#fff\",\n          headerStyle: {\n            backgroundColor: \"#8E2835\"\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["C:/Users/bando/OneDrive/Documents/GitHub/KAAG-v1/App.js"],"names":["StatusBar","React","Component","NavigationContainer","createStackNavigator","firebase","Provider","createStore","applyMiddleware","rootReducer","thunk","store","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","SplashScreen","LandingScreen","RegisterScreen","LoginScreen","MainScreen","Landing","ContributionScreen","VocabularyScreen","GrammarScreen","WordScreen","SaveScreen","Stack","App","props","state","loaded","auth","onAuthStateChanged","user","setState","loggedIn","flex","justifyContent","headerShown","navigation","title","headerTintColor","headerStyle","backgroundColor"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,QAAP,MAAqB,cAArB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,WAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,IAAMC,KAAK,GAAGJ,WAAW,CAACE,WAAD,EAAcD,eAAe,CAACE,KAAD,CAA7B,CAAzB;AAEA,IAAME,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,4BAFS;AAGrBC,EAAAA,SAAS,EAAE,YAHU;AAIrBC,EAAAA,aAAa,EAAE,wBAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE,2CANc;AAOrBC,EAAAA,aAAa,EAAE;AAPM,CAAvB;;AAUA,IAAId,QAAQ,CAACe,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC9BhB,EAAAA,QAAQ,CAACiB,aAAT,CAAuBV,cAAvB;AACD;;AAED,OAAOW,YAAP;AACA,OAAOC,aAAP;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AACA,OAAOC,OAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,aAAP;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AAEA,IAAMC,KAAK,GAAG9B,oBAAoB,EAAlC;AAKA,WAAa+B,GAAb;AAAA;;AAAA;;AACE,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAFiB;AAKlB;;AANH;AAAA;AAAA,WAQE,6BAAoB;AAAA;;AAClBjC,MAAAA,QAAQ,CAACkC,IAAT,GAAgBC,kBAAhB,CAAmC,UAACC,IAAD,EAAU;AAC3C,YAAI,CAACA,IAAL,EAAW;AACT,UAAA,MAAI,CAACC,QAAL,CAAc;AACZC,YAAAA,QAAQ,EAAE,KADE;AAEZL,YAAAA,MAAM,EAAE;AAFI,WAAd;AAID,SALD,MAKO;AACL,UAAA,MAAI,CAACI,QAAL,CAAc;AACZC,YAAAA,QAAQ,EAAE,IADE;AAEZL,YAAAA,MAAM,EAAE;AAFI,WAAd;AAID;AACF,OAZD;AAaD;AAtBH;AAAA;AAAA,WAuBE,kBAAS;AACP,wBAA6B,KAAKD,KAAlC;AAAA,UAAQM,QAAR,eAAQA,QAAR;AAAA,UAAkBL,MAAlB,eAAkBA,MAAlB;;AACA,UAAI,CAACA,MAAL,EAAa;AACX,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEM,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,cAAc,EAAE;AAA3B,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF;AAKD;;AACD,UAAI,CAACF,QAAL,EAAe;AACb,eACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,UAAA,gBAAgB,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CAAO,MAAP;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAEpB,YAFb;AAGE,UAAA,OAAO,EAAE;AAAEuB,YAAAA,WAAW,EAAE;AAAf,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAME,oBAAC,KAAD,CAAO,MAAP;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,SAAS,EAAEtB,aAFb;AAGE,UAAA,OAAO,EAAE;AAAEsB,YAAAA,WAAW,EAAE;AAAf,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,EAWE,oBAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,SAAS,EAAErB,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXF,EAYE,oBAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,SAAS,EAAEC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZF,CADF,CADF;AAkBD;;AACD,aACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEf,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,QAAA,gBAAgB,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAEgB,UAFb;AAGE,QAAA,OAAO,EAAE;AAAEmB,UAAAA,WAAW,EAAE;AAAf,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE,oBAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,kBADP;AAEE,QAAA,SAAS,EAAEjB,kBAFb;AAGE,QAAA,UAAU,EAAE,KAAKO,KAAL,CAAWW,UAHzB;AAIE,QAAA,OAAO,EAAE;AACPC,UAAAA,KAAK,EAAE,MADA;AAEPC,UAAAA,eAAe,EAAE,MAFV;AAGPC,UAAAA,WAAW,EAAE;AACXC,YAAAA,eAAe,EAAE;AADN;AAHN,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAmBE,oBAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,SAAS,EAAErB,gBAFb;AAGE,QAAA,OAAO,EAAE;AACPkB,UAAAA,KAAK,EAAE,YADA;AAEPC,UAAAA,eAAe,EAAE,MAFV;AAGPC,UAAAA,WAAW,EAAE;AACXC,YAAAA,eAAe,EAAE;AADN;AAHN,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,EA8BE,oBAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,SAAS,EAAEpB,aAFb;AAGE,QAAA,OAAO,EAAE;AACPiB,UAAAA,KAAK,EAAE,SADA;AAEPC,UAAAA,eAAe,EAAE,MAFV;AAGPC,UAAAA,WAAW,EAAE;AACXC,YAAAA,eAAe,EAAE;AADN;AAHN,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9BF,EAyCE,oBAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAEnB,UAFb;AAGE,QAAA,OAAO,EAAE;AACPgB,UAAAA,KAAK,EAAE,EADA;AAEPC,UAAAA,eAAe,EAAE,MAFV;AAGPC,UAAAA,WAAW,EAAE;AACXC,YAAAA,eAAe,EAAE;AADN;AAHN,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzCF,EAoDE,oBAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAElB,UAFb;AAGE,QAAA,UAAU,EAAE,KAAKG,KAAL,CAAWW,UAHzB;AAIE,QAAA,OAAO,EAAE;AACPC,UAAAA,KAAK,EAAE,MADA;AAEPC,UAAAA,eAAe,EAAE,MAFV;AAGPC,UAAAA,WAAW,EAAE;AACXC,YAAAA,eAAe,EAAE;AADN;AAHN,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApDF,CADF,CADF,CADF;AAuED;AA3HH;;AAAA;AAAA,EAAyBjD,SAAzB;AA8HA,eAAeiC,GAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { Component } from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport firebase from \"firebase/app\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./redux/reducers\";\r\nimport thunk from \"redux-thunk\";\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBBOHNuFcDbSprMbzUMu3jQpyo5aGxBvyg\",\r\n  authDomain: \"kaag-1aa02.firebaseapp.com\",\r\n  projectId: \"kaag-1aa02\",\r\n  storageBucket: \"kaag-1aa02.appspot.com\",\r\n  messagingSenderId: \"192145880916\",\r\n  appId: \"1:192145880916:web:fef684f7c8cb0b6e6abac1\",\r\n  measurementId: \"G-E8PYDQP5LT\",\r\n};\r\n\r\nif (firebase.apps.length === 0) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nimport SplashScreen from \"./Splash\";\r\nimport LandingScreen from \"./components/auth/Landing\";\r\nimport RegisterScreen from \"./components/auth/Register\";\r\nimport LoginScreen from \"./components/auth/Login\";\r\nimport MainScreen from \"./components/Main\";\r\nimport Landing from \"./components/auth/Landing\";\r\nimport ContributionScreen from \"./components/main/Contribution\";\r\nimport VocabularyScreen from \"./components/main/Vocabulary\";\r\nimport GrammarScreen from \"./components/main/Grammar\";\r\nimport WordScreen from \"./components/main/Word\";\r\nimport SaveScreen from \"./components/main/Save\";\r\n\r\nconst Stack = createStackNavigator();\r\n\r\n// import { LogBox } from \"react-native\";\r\n\r\n// LogBox.ignoreLogs([\"Setting a timer\"]);\r\nexport class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (!user) {\r\n        this.setState({\r\n          loggedIn: false,\r\n          loaded: true,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          loggedIn: true,\r\n          loaded: true,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    const { loggedIn, loaded } = this.state;\r\n    if (!loaded) {\r\n      return (\r\n        <View style={{ flex: 1, justifyContent: \"center\" }}>\r\n          <Text> Loading </Text>\r\n        </View>\r\n      );\r\n    }\r\n    if (!loggedIn) {\r\n      return (\r\n        <NavigationContainer>\r\n          <Stack.Navigator initialRouteName=\"Landing\">\r\n            <Stack.Screen\r\n              name=\"Splash\"\r\n              component={SplashScreen}\r\n              options={{ headerShown: false }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Landing\"\r\n              component={LandingScreen}\r\n              options={{ headerShown: false }}\r\n            />\r\n            <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n      );\r\n    }\r\n    return (\r\n      <Provider store={store}>\r\n        <NavigationContainer>\r\n          <Stack.Navigator initialRouteName=\"Main\">\r\n            <Stack.Screen\r\n              name=\"Main\"\r\n              component={MainScreen}\r\n              options={{ headerShown: false }}\r\n            />\r\n\r\n            <Stack.Screen\r\n              name=\"MainContribution\"\r\n              component={ContributionScreen}\r\n              navigation={this.props.navigation}\r\n              options={{\r\n                title: \"Post\",\r\n                headerTintColor: \"#fff\",\r\n                headerStyle: {\r\n                  backgroundColor: \"#8E2835\",\r\n                },\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Vocabulary\"\r\n              component={VocabularyScreen}\r\n              options={{\r\n                title: \"Vocabulary\",\r\n                headerTintColor: \"#fff\",\r\n                headerStyle: {\r\n                  backgroundColor: \"#8E2835\",\r\n                },\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Grammar\"\r\n              component={GrammarScreen}\r\n              options={{\r\n                title: \"Grammar\",\r\n                headerTintColor: \"#fff\",\r\n                headerStyle: {\r\n                  backgroundColor: \"#8E2835\",\r\n                },\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Word\"\r\n              component={WordScreen}\r\n              options={{\r\n                title: \"\",\r\n                headerTintColor: \"#fff\",\r\n                headerStyle: {\r\n                  backgroundColor: \"#8E2835\",\r\n                },\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Save\"\r\n              component={SaveScreen}\r\n              navigation={this.props.navigation}\r\n              options={{\r\n                title: \"Post\",\r\n                headerTintColor: \"#fff\",\r\n                headerStyle: {\r\n                  backgroundColor: \"#8E2835\",\r\n                },\r\n              }}\r\n            />\r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}