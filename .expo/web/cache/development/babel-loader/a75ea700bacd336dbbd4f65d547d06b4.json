{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\KAAG-1\\\\components\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchUser, fetchUserPosts, fetchAllUserPosts } from \"../redux/actions/index\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createMaterialBottomTabNavigator } from \"@react-navigation/material-bottom-tabs\";\nvar Tab = createMaterialBottomTabNavigator();\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nimport CourseScreen from \"./main/Course\";\nimport DictionaryScreen from \"./main/Dictionary\";\nimport CommunityScreen from \"./main/Community\";\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n      this.props.fetchUserPosts();\n      this.props.fetchAllUserPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Course\",\n        labeled: false,\n        color: \"white\",\n        activeColor: \"#8E2835\",\n        inactiveColor: \"#dadada\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Course\",\n        component: CourseScreen,\n        options: {\n          tabBarColor: \"white\",\n          tabBarIcon: function tabBarIcon(_ref) {\n            var size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home-variant-outline\",\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Dictionary\",\n        component: DictionaryScreen,\n        options: {\n          tabBarColor: \"white\",\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var size = _ref2.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"book-open-variant\",\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Community\",\n        component: CommunityScreen,\n        listeners: function listeners(_ref3) {\n          var navigation = _ref3.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Community\");\n            }\n          };\n        },\n        options: {\n          tabBarColor: \"white\",\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var size = _ref4.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"plus-box-multiple\",\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Settings\",\n        component: CourseScreen,\n        options: {\n          tabBarColor: \"white\",\n          tabBarIcon: function tabBarIcon(_ref5) {\n            var size = _ref5.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"cog\",\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser,\n    fetchUserPosts: fetchUserPosts,\n    fetchAllUserPosts: fetchAllUserPosts\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["C:/Users/Admin/Documents/GitHub/KAAG-1/components/Main.js"],"names":["React","Component","MaterialCommunityIcons","connect","bindActionCreators","fetchUser","fetchUserPosts","fetchAllUserPosts","NavigationContainer","createMaterialBottomTabNavigator","Tab","EmptyScreen","CourseScreen","DictionaryScreen","CommunityScreen","Main","props","tabBarColor","tabBarIcon","size","navigation","tabPress","event","preventDefault","navigate","mapStateToProps","store","currentUser","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  fetchUser,\r\n  fetchUserPosts,\r\n  fetchAllUserPosts,\r\n} from \"../redux/actions/index\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\n\r\nimport { createMaterialBottomTabNavigator } from \"@react-navigation/material-bottom-tabs\";\r\n\r\nconst Tab = createMaterialBottomTabNavigator();\r\nconst EmptyScreen = () => {\r\n  return null;\r\n};\r\n\r\n// import { LogBox } from \"react-native\";\r\n\r\n// LogBox.ignoreLogs([\"Setting a timer\"]);\r\n\r\nimport CourseScreen from \"./main/Course\";\r\nimport DictionaryScreen from \"./main/Dictionary\";\r\nimport CommunityScreen from \"./main/Community\";\r\n// import { FirstScreenNavigator } from \"../CustomNavigation\";\r\n\r\nexport class Main extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchUser();\r\n    this.props.fetchUserPosts();\r\n    this.props.fetchAllUserPosts();\r\n  }\r\n  render() {\r\n    return (\r\n      <Tab.Navigator\r\n        initialRouteName=\"Course\"\r\n        labeled={false}\r\n        color=\"white\"\r\n        activeColor=\"#8E2835\"\r\n        inactiveColor=\"#dadada\"\r\n      >\r\n        <Tab.Screen\r\n          name=\"Course\"\r\n          component={CourseScreen}\r\n          options={{\r\n            tabBarColor: \"white\",\r\n            tabBarIcon: ({ size }) => (\r\n              <MaterialCommunityIcons name=\"home-variant-outline\" size={26} />\r\n            ),\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name=\"Dictionary\"\r\n          component={DictionaryScreen}\r\n          options={{\r\n            tabBarColor: \"white\",\r\n            tabBarIcon: ({ size }) => (\r\n              <MaterialCommunityIcons name=\"book-open-variant\" size={26} />\r\n            ),\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name=\"Community\"\r\n          component={CommunityScreen}\r\n          listeners={({ navigation }) => ({\r\n            tabPress: (event) => {\r\n              event.preventDefault();\r\n              navigation.navigate(\"Community\");\r\n            },\r\n          })}\r\n          options={{\r\n            tabBarColor: \"white\",\r\n            tabBarIcon: ({ size }) => (\r\n              <MaterialCommunityIcons name=\"plus-box-multiple\" size={26} />\r\n            ),\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name=\"Settings\"\r\n          component={CourseScreen}\r\n          options={{\r\n            tabBarColor: \"white\",\r\n            tabBarIcon: ({ size }) => (\r\n              <MaterialCommunityIcons name=\"cog\" size={26} />\r\n            ),\r\n          }}\r\n        />\r\n      </Tab.Navigator>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n  currentUser: store.userState.currentUser,\r\n});\r\n\r\nconst mapDispatchProps = (dispatch) =>\r\n  bindActionCreators(\r\n    { fetchUser, fetchUserPosts, fetchAllUserPosts },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(Main);\r\n"]},"metadata":{},"sourceType":"module"}